{"version":3,"sources":["graphql/queries/seachForTrend.js","components/hooks/useTrends.js","components/XSearch/XTrends.js"],"names":["searchForTrend","gql","_templateObject","month","patches","5","2018","name","link","2019","6","7","9","10","11","12","1","3","4","presetColors","setPlotDataInitial","arr_to_return","i","hasOwnProperty","push","year","xLabel","patch","d","Date","getFullYear","currentMonth","getMonth","j","concat","mergeModeArrays","countObj","sz_arr","tc_arr","rm_arr","cb_arr","Array","fill","resolveStartIndex","monthIndex","getColor","state","keys","length","replace","Math","random","toString","reducer","action","type","trend","trendDocument","mode","modeLabel","weapon","indexOf","toPlotData","Object","toConsumableArray","data","index","counts","year_arr","plotIndex","keyObj","color","weaponToDelete","newKeys","filter","k","weaponLeft","left","weaponRight","right","newKey","newKeysWithCombined","map","dataObj","objectSpread","weaponLeftCount","weaponRightCount","keysWithNewColor","Error","customToolTipStyle","width","margin","lineHeight","border","backgroundColor","padding","labelStyle","fontWeight","introStyle","borderTop","descStyle","months","XTrends","_ref","setMenuSelection","_useState","useState","_useState2","slicedToArray","weaponForm","setWeaponForm","_useState3","_useState4","combineFormLeft","setCombineFormLeft","_useState5","_useState6","combineFormRight","setCombineFormRight","_useState7","_useState8","weaponForDispatch","setWeaponForDispatch","_useState9","_useState10","setMode","_useState11","_useState12","modeForDispatch","setModeForDispatch","_useTrends","_useReducer","useReducer","_useReducer2","plotData","dispatch","_useQuery","useQuery","skip","variables","loading","error","useEffect","useTrends","containerWidth","useWindowDimensions","document","title","react_default","a","createElement","style","message","Segment","Header","as","Select","content","value","onChange","paddingTop","Form","Field","Radio","label","checked","Button","onClick","wpnForCombine","disabled","Dropdown","inline","options","text","event","_ref3","_ref4","es6","height","top","bottom","strokeDasharray","dataKey","tickLine","scale","axisLine","xAxisId","allowDecimals","angle","position","textAnchor","_ref2","active","payload","monthNumber","yearNumber","patchDescription","p","stroke","key","verticalAlign","w","Grid","columns","Column","List","divided","Item","Content","floated","circular","size","negative","icon","Image","avatar","src","english_internal","background","cursor","WebkitUserSelect","MozUserSelect","MsUserSelect","userSelect","Message","href"],"mappings":"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","file":"static/js/6.a6c678dd.chunk.js","sourcesContent":["import { gql } from 'apollo-boost'\r\n\r\nexport const searchForTrend = gql`\r\nquery searchForTrend($weapon: String!) {\r\n  searchForTrend(weapon: $weapon) {\r\n    weapon\r\n    counts {\r\n      year\r\n      SZ\r\n      TC\r\n      RM\r\n      CB\r\n    }\r\n  }\r\n}\r\n`","import { useReducer, useEffect } from \"react\"\r\nimport { useQuery } from \"@apollo/react-hooks\"\r\nimport { searchForTrend } from \"../../graphql/queries/seachForTrend\"\r\n\r\nconst month = []\r\nmonth[0] = null\r\nmonth[1] = \"Jan\"\r\nmonth[2] = \"Feb\"\r\nmonth[3] = \"Mar\"\r\nmonth[4] = \"Apr\"\r\nmonth[5] = \"May\"\r\nmonth[6] = \"Jun\"\r\nmonth[7] = \"Jul\"\r\nmonth[8] = \"Aug\"\r\nmonth[9] = \"Sep\"\r\nmonth[10] = \"Oct\"\r\nmonth[11] = \"Nov\"\r\nmonth[12] = \"Dec\"\r\n\r\nconst patches = {\r\n  5: {\r\n    2018: {\r\n      name: \"3.0\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_3.0.0_(Splatoon_2)\"\r\n    },\r\n    2019: {\r\n      name: \"4.8\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.8.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  6: {\r\n    2018: {\r\n      name: \"3.1\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_3.1.0_(Splatoon_2)\"\r\n    },\r\n    2019: {\r\n      name: \"4.9\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.9.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  7: {\r\n    2018: {\r\n      name: \"3.2\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_3.2.0_(Splatoon_2)\"\r\n    },\r\n    2019: {\r\n      name: \"5.0\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_5.0.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  9: {\r\n    2018: {\r\n      name: \"4.0\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.0.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  10: {\r\n    2018: {\r\n      name: \"4.1\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.1.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  11: {\r\n    2018: {\r\n      name: \"4.2\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.2.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  12: {\r\n    2018: {\r\n      name: \"4.3\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.3.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  1: {\r\n    2019: {\r\n      name: \"4.4\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.4.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  3: {\r\n    2019: {\r\n      name: \"4.5\",\r\n      link: \"https://splatoonwiki.org/wiki/Version_4.5.0_(Splatoon_2)\"\r\n    }\r\n  },\r\n  4: {\r\n    2019: {\r\n      name: \"4.6+4.7\",\r\n      link: \"https://splatoonwiki.org/wiki/List_of_updates_in_Splatoon_2\"\r\n    }\r\n  }\r\n}\r\n\r\nconst presetColors = [\r\n  \"#FF00FF\",\r\n  \"#008000\",\r\n  \"#FF0000\",\r\n  \"#0000FF\",\r\n  \"#FFA500\",\r\n  \"#800080\",\r\n  \"#A52A2A\",\r\n  \"#1BC5CD\",\r\n  \"#000080\",\r\n  \"#5BCCA0\"\r\n]\r\n\r\nconst setPlotDataInitial = () => {\r\n  const arr_to_return = []\r\n  for (let i = 5; i < 13; i++) {\r\n    if (patches.hasOwnProperty(i) && patches[i].hasOwnProperty(2018)) {\r\n      arr_to_return.push({\r\n        name: i,\r\n        year: 2018,\r\n        xLabel: month[i],\r\n        patch: patches[i][2018].name\r\n      })\r\n    } else {\r\n      arr_to_return.push({ name: i, year: 2018, xLabel: month[i] })\r\n    }\r\n  }\r\n  const d = new Date()\r\n  const year = d.getFullYear()\r\n  const currentMonth = d.getMonth() + 1\r\n  for (let i = 2019; i < year + 1; i++) {\r\n    for (let j = 1; j < 13; j++) {\r\n      // break the loop when we reach the future\r\n      if (i === year && j === currentMonth) break\r\n      const xLabel = j === 1 ? `Jan (${year})` : month[j]\r\n      if (patches.hasOwnProperty(j) && patches[j].hasOwnProperty(i)) {\r\n        arr_to_return.push({\r\n          name: j,\r\n          year: i,\r\n          xLabel,\r\n          patch: patches[j][i].name\r\n        })\r\n      } else {\r\n        arr_to_return.push({ name: j, year: i, xLabel })\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr_to_return\r\n}\r\n\r\nconst mergeModeArrays = countObj => {\r\n  const sz_arr = countObj[\"SZ\"]\r\n  const tc_arr = countObj[\"TC\"]\r\n  const rm_arr = countObj[\"RM\"]\r\n  const cb_arr = countObj[\"CB\"]\r\n  const arr_to_return = new Array(12).fill(0)\r\n  for (let i = 1; i < 13; i++) {\r\n    arr_to_return[i] = sz_arr[i] + tc_arr[i] + rm_arr[i] + cb_arr[i]\r\n  }\r\n  return arr_to_return\r\n}\r\n\r\n// monthIndex is between 1 and 12 (inclusive)\r\nconst resolveStartIndex = (monthIndex, year) => {\r\n  // resolves start index for an array where index 0 is always May 2018\r\n  if (year === 2018) {\r\n    return monthIndex - 5\r\n  } else if (year === 2019) {\r\n    return 7 + monthIndex\r\n  } else {\r\n    return 7 + monthIndex + (year - 2019) * 12\r\n  }\r\n}\r\n\r\nconst getColor = state => {\r\n  if (state.keys.length < 9) {\r\n    return presetColors[state.keys.length]\r\n  }\r\n\r\n  return \"#000000\".replace(/0/g, function() {\r\n    return (~~(Math.random() * 16)).toString(16)\r\n  })\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      const trend = action.trendDocument\r\n      const mode = action.mode\r\n      const modeLabel = mode === \"ALL\" ? \"\" : ` (${mode})`\r\n      const weapon = `${action.trendDocument.weapon}${modeLabel}`\r\n      // don't add duplicate plots\r\n      if (state.keys.indexOf(weapon) !== -1) return state\r\n      const toPlotData = [...state.data]\r\n      for (let index = 0; index < trend.counts.length; index++) {\r\n        let year = trend.counts[index].year\r\n        let year_arr = null\r\n        if (mode === \"ALL\") {\r\n          year_arr = mergeModeArrays(trend.counts[index])\r\n        } else {\r\n          year_arr = trend.counts[index][mode]\r\n        }\r\n\r\n        for (let i = 1; i < 13; i++) {\r\n          // if year is 2018 skipping to the index where values are found\r\n          if (year === 2018 && i < 5) {\r\n            i = 4\r\n            continue\r\n          }\r\n          const plotIndex = resolveStartIndex(i, year)\r\n          if (plotIndex === toPlotData.length) break\r\n          toPlotData[plotIndex][weapon] = year_arr[i]\r\n        }\r\n      }\r\n\r\n      const keyObj = {\r\n        weapon,\r\n        color: getColor(state)\r\n      }\r\n      return { data: toPlotData, keys: [...state.keys, keyObj] }\r\n    case \"delete\":\r\n      const weaponToDelete = action.weapon\r\n      const newKeys = [...state.keys].filter(k => k.weapon !== weaponToDelete)\r\n      return { data: state.data, keys: newKeys }\r\n    case \"combine\":\r\n      const weaponLeft = action.left\r\n      const weaponRight = action.right\r\n      const newKey = `${weaponLeft} + ${weaponRight}`\r\n      const newKeysWithCombined = [\r\n        ...state.keys,\r\n        { weapon: newKey, color: getColor(state) }\r\n      ].filter(k => k.weapon !== weaponLeft && k.weapon !== weaponRight)\r\n      const newDataWithCombined = [...state.data].map(d => {\r\n        const dataObj = { ...d }\r\n        let weaponLeftCount = 0\r\n        let weaponRightCount = 0\r\n        if (dataObj.hasOwnProperty(weaponLeft))\r\n          weaponLeftCount = dataObj[weaponLeft]\r\n        if (dataObj.hasOwnProperty(weaponRight))\r\n          weaponRightCount = dataObj[weaponRight]\r\n        dataObj[newKey] = weaponLeftCount + weaponRightCount\r\n        delete dataObj[weaponLeft]\r\n        delete dataObj[weaponRight]\r\n        return dataObj\r\n      })\r\n\r\n      return { data: newDataWithCombined, keys: newKeysWithCombined }\r\n    case \"randomizeColor\":\r\n      const keysWithNewColor = [...state.keys].map(k => {\r\n        if (k.weapon !== action.weapon) {\r\n          return k\r\n        }\r\n        return {\r\n          ...k,\r\n          color: \"#000000\".replace(/0/g, function() {\r\n            return (~~(Math.random() * 16)).toString(16)\r\n          })\r\n        }\r\n      })\r\n      return { data: state.data, keys: keysWithNewColor }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nexport default function useTrends(weapon, mode) {\r\n  const [plotData, dispatch] = useReducer(reducer, {\r\n    data: setPlotDataInitial(),\r\n    keys: []\r\n  })\r\n  // Skip query if there is no weapon provided\r\n  const { data, loading, error } = useQuery(searchForTrend, {\r\n    skip: !weapon,\r\n    variables: { weapon }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (loading || !data) return\r\n    dispatch({ type: \"add\", trendDocument: data.searchForTrend, mode })\r\n  }, [loading, data, mode])\r\n\r\n  return { loading, error, plotData, dispatch }\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport {\r\n  Button,\r\n  Form,\r\n  Radio,\r\n  Segment,\r\n  List,\r\n  Image,\r\n  Grid,\r\n  Dropdown,\r\n  Message,\r\n  Header\r\n} from \"semantic-ui-react\"\r\nimport useTrends from \"../hooks/useTrends\"\r\nimport useWindowDimensions from \"../hooks/useWindowDimensions\"\r\nimport english_internal from \"../../utils/english_internal.json\"\r\nimport Select from '../elements/Select'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Brush\r\n} from \"recharts\"\r\n\r\nconst customToolTipStyle = {\r\n  width: \"200px\",\r\n  margin: \"0\",\r\n  lineHeight: \"24px\",\r\n  border: \"1px solid #f5f5f5\",\r\n  backgroundColor: \"hsla(0,0%,100%,.8)\",\r\n  padding: \"10px\"\r\n}\r\n\r\nconst labelStyle = {\r\n  margin: \"0\",\r\n  color: \"#666\",\r\n  fontWeight: \"700\"\r\n}\r\n\r\nconst introStyle = {\r\n  borderTop: \"1px solid #f5f5f5\",\r\n  margin: \"0\"\r\n}\r\n\r\nconst descStyle = {\r\n  margin: 0,\r\n  color: \"#999\"\r\n}\r\n\r\nconst months = [\r\n  null,\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n]\r\n\r\nconst XTrends = ({ setMenuSelection }) => {\r\n  const [weaponForm, setWeaponForm] = useState(null)\r\n  const [combineFormLeft, setCombineFormLeft] = useState(null)\r\n  const [combineFormRight, setCombineFormRight] = useState(null)\r\n  const [weaponForDispatch, setWeaponForDispatch] = useState(null)\r\n  const [mode, setMode] = useState(\"ALL\")\r\n  const [modeForDispatch, setModeForDispatch] = useState(null)\r\n  const { loading, error, plotData, dispatch } = useTrends(\r\n    weaponForDispatch,\r\n    modeForDispatch\r\n  )\r\n  const { containerWidth } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    setMenuSelection(\"trends\")\r\n    document.title = \"X Rank Trends - sendou.ink\"\r\n  }, [setMenuSelection])\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n      if (payload.length === 0) return null\r\n      const monthNumber = payload[0].payload.name\r\n      const yearNumber = payload[0].payload.year\r\n      let patchDescription = null\r\n      if (payload[0].payload.hasOwnProperty(\"patch\")) {\r\n        if (monthNumber === 4 && yearNumber === 2019) {\r\n          patchDescription = \"Patches 4.6 and 4.7 were released.\"\r\n        } else {\r\n          patchDescription = `Patch ${payload[0].payload.patch} was released.`\r\n        }\r\n      }\r\n      return (\r\n        <div style={customToolTipStyle}>\r\n          <p style={labelStyle}>{`${months[monthNumber]} (${yearNumber})`}</p>\r\n          {payload.map(p => {\r\n            return (\r\n              <p style={{ ...introStyle, color: p.stroke }} key={p.dataKey}>\r\n                {p.payload[p.dataKey]} - {p.dataKey}\r\n              </p>\r\n            )\r\n          })}\r\n          {patchDescription && <p style={descStyle}>{patchDescription}</p>}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  if (error) {\r\n    return <div style={{ color: \"red\" }}>{error.message}</div>\r\n  }\r\n\r\n  return (\r\n    <Segment>\r\n        <div style={{ padding: \"5px\" }}>\r\n          <Header as=\"h2\">\r\n            Compare weapons based on their X Rank Top 500 appearances\r\n          </Header>\r\n          <Select\r\n            content=\"ALLWEAPONS\"\r\n            value={weaponForm}\r\n            onChange={setWeaponForm}\r\n          />\r\n          <div style={{ paddingTop: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <Radio\r\n                  label=\"All Modes\"\r\n                  name=\"radioGroup\"\r\n                  value=\"ALL\"\r\n                  checked={mode === \"ALL\"}\r\n                  onChange={() => setMode(\"ALL\")}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Radio\r\n                  label=\"Splat Zones\"\r\n                  name=\"radioGroup\"\r\n                  value=\"SZ\"\r\n                  checked={mode === \"SZ\"}\r\n                  onChange={() => setMode(\"SZ\")}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Radio\r\n                  label=\"Tower Control\"\r\n                  name=\"radioGroup\"\r\n                  value=\"TC\"\r\n                  checked={mode === \"TC\"}\r\n                  onChange={() => setMode(\"TC\")}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Radio\r\n                  label=\"Rainmaker\"\r\n                  name=\"radioGroup\"\r\n                  value=\"RM\"\r\n                  checked={mode === \"RM\"}\r\n                  onChange={() => setMode(\"RM\")}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Radio\r\n                  label=\"Clam Blitz\"\r\n                  name=\"radioGroup\"\r\n                  value=\"CB\"\r\n                  checked={mode === \"CB\"}\r\n                  onChange={() => setMode(\"CB\")}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </div>\r\n          <div style={{ paddingTop: \"10px\" }}>\r\n            <Button\r\n              loading={loading}\r\n              onClick={() => {\r\n                setWeaponForDispatch(weaponForm)\r\n                setModeForDispatch(mode)\r\n                const wpnForCombine =\r\n                  mode === \"ALL\" ? weaponForm : `${weaponForm} (${mode})`\r\n                setCombineFormLeft(wpnForCombine)\r\n                if (plotData.keys.length >= 1)\r\n                  setCombineFormRight(\r\n                    plotData.keys[plotData.keys.length - 1].weapon\r\n                  )\r\n              }}\r\n              disabled={!weaponForm}\r\n            >\r\n              Add to plot as new\r\n            </Button>\r\n            {plotData.keys.length >= 2 && (\r\n              <div style={{ paddingTop: \"10px\" }}>\r\n                <Button\r\n                  disabled={\r\n                    !combineFormLeft ||\r\n                    !combineFormRight ||\r\n                    combineFormLeft === combineFormRight\r\n                  }\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"combine\",\r\n                      left: combineFormLeft,\r\n                      right: combineFormRight\r\n                    })\r\n                  }}\r\n                >\r\n                  Combine...\r\n                </Button>\r\n                <span>\r\n                  {\" \"}\r\n                  <Dropdown\r\n                    inline\r\n                    options={plotData.keys\r\n                      .map(k => {\r\n                        return { text: k.weapon, value: k.weapon }\r\n                      })\r\n                      .filter(k => k.text !== combineFormRight)}\r\n                    onChange={(event, { value }) => {\r\n                      setCombineFormLeft(value)\r\n                    }}\r\n                    value={combineFormLeft}\r\n                  />{\" \"}\r\n                  with{\" \"}\r\n                  <Dropdown\r\n                    inline\r\n                    options={plotData.keys\r\n                      .map(k => {\r\n                        return { text: k.weapon, value: k.weapon }\r\n                      })\r\n                      .filter(k => k.text !== combineFormLeft)}\r\n                    onChange={(event, { value }) => {\r\n                      setCombineFormRight(value)\r\n                    }}\r\n                    value={combineFormRight}\r\n                  />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {plotData.keys.length > 0 && (\r\n            <div style={{ paddingTop: \"10px\" }}>\r\n              <LineChart\r\n                width={containerWidth}\r\n                height={500}\r\n                data={plotData.data}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 50,\r\n                  left: 0,\r\n                  bottom: 5\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"xLabel\" tickLine={false} />\r\n                <XAxis\r\n                  dataKey=\"patch\"\r\n                  tickLine={true}\r\n                  scale=\"band\"\r\n                  axisLine={false}\r\n                  height={1}\r\n                  xAxisId=\"patch\"\r\n                />\r\n                <YAxis\r\n                  allowDecimals={false}\r\n                  label={{\r\n                    value: \"X rank top 500 placements\",\r\n                    angle: -90,\r\n                    position: \"insideLeft\",\r\n                    textAnchor: \"middle\"\r\n                  }}\r\n                />\r\n                <Tooltip content={<CustomTooltip />} />\r\n                <Legend verticalAlign=\"top\" />\r\n                <Brush dataKey=\"xLabel\" height={75} stroke=\"#000000\" />\r\n                {plotData.keys.map(keyObj => {\r\n                  const w = keyObj.weapon\r\n                  const color = keyObj.color\r\n                  return (\r\n                    <Line key={w} type=\"monotone\" dataKey={w} stroke={color} />\r\n                  )\r\n                })}\r\n              </LineChart>\r\n              <Grid columns={2} style={{ paddingTop: \"10px\" }}>\r\n                <Grid.Column>\r\n                  <List divided verticalAlign=\"middle\">\r\n                    {plotData.keys.map(keyObj => {\r\n                      const w = keyObj.weapon\r\n                      const color = keyObj.color\r\n                      return (\r\n                        <List.Item key={w}>\r\n                          <List.Content floated=\"right\">\r\n                            <Button\r\n                              circular\r\n                              size=\"mini\"\r\n                              negative\r\n                              icon=\"trash\"\r\n                              onClick={() =>\r\n                                dispatch({ type: \"delete\", weapon: w })\r\n                              }\r\n                            />\r\n                          </List.Content>\r\n                          {w.indexOf(\"+\") === -1 && (\r\n                            <Image\r\n                              avatar\r\n                              src={`/wpnSmall/Wst_${\r\n                                english_internal[\r\n                                  w\r\n                                    .replace(\" (SZ)\", \"\")\r\n                                    .replace(\" (TC)\", \"\")\r\n                                    .replace(\" (RM)\", \"\")\r\n                                    .replace(\" (CB)\", \"\")\r\n                                ]\r\n                              }.png`}\r\n                            />\r\n                          )}\r\n                          <List.Content>\r\n                            <span\r\n                              style={{\r\n                                color: color,\r\n                                background: \"none\",\r\n                                border: \"none\",\r\n                                cursor: \"pointer\",\r\n                                WebkitUserSelect: \"none\",\r\n                                MozUserSelect: \"none\",\r\n                                MsUserSelect: \"none\",\r\n                                userSelect: \"none\"\r\n                              }}\r\n                              onClick={() =>\r\n                                dispatch({ type: \"randomizeColor\", weapon: w })\r\n                              }\r\n                            >\r\n                              {w}\r\n                            </span>\r\n                          </List.Content>\r\n                        </List.Item>\r\n                      )\r\n                    })}\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column />\r\n              </Grid>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Message>\r\n          <Message.List>\r\n            <Message.Item>\r\n              You can check out all the patch notes{\" \"}\r\n              <a href=\"https://splatoonwiki.org/wiki/List_of_updates_in_Splatoon_2\">\r\n                here\r\n              </a>\r\n            </Message.Item>\r\n            <Message.Item>\r\n              For alternative take on X Rank trends check out{\" \"}\r\n              <a href=\"https://www.splatmeta.ink\">Splat Meta</a>\r\n            </Message.Item>\r\n          </Message.List>\r\n        </Message>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default XTrends\r\n"],"sourceRoot":""}