datasource db {
  provider = "postgresql"
  // FIXME: should use same .env system as Next.JS
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int      @id @default(autoincrement())
  username      String
  discriminator String
  discordId     String   @unique
  discordAvatar String?
  profile       Profile?
  player        Player?
  Build         Build[]
}

model Profile {
  twitterName   String?
  twitchName    String?
  youtubeId     String?
  country       String?
  sensMotion    Float?
  sensStick     Float?
  bio           String?
  weaponPool    String[]
  customUrlPath String?  @unique
  user          User     @relation(fields: [userId], references: [id])
  userId        Int      @unique

}

enum RankedMode {
  SZ
  TC
  RM
  CB
}

model XRankPlacement {
  id              Int        @id @default(autoincrement())
  switchAccountId String
  player          Player     @relation(fields: [switchAccountId], references: [switchAccountId])
  playerName      String
  ranking         Int
  xPower          Float
  weapon          String
  mode            RankedMode
  month           Int
  year            Int

  @@unique([switchAccountId, mode, month, year])
}

model Player {
  switchAccountId String           @unique
  userId          Int?             @unique
  name            String
  placements      XRankPlacement[]
  user            User?            @relation(fields: [userId], references: [id])
}

enum Ability {
  CB
  LDE
  OG
  T
  H
  NS
  TI
  RP
  AD
  DR
  SJ
  OS
  BDU
  REC
  RES
  ISM
  ISS
  MPU
  QR
  QSJ
  RSU
  SSU
  SCU
  SPU
  SS
  BRU
}

model Build {
  id                Int       @id @default(autoincrement())
  userId            Int
  weapon            String
  title             String?
  description       String?
  abilityPoints     Json
  headGear          String?
  headAbilities     Ability[]
  clothingGear      String?
  clothingAbilities Ability[]
  shoesGear         String?
  shoesAbilities    Ability[]
  top500            Boolean
  jpn               Boolean
  updatedAt         DateTime  @updatedAt
  user              User      @relation(fields: [userId], references: [id])

  @@index(weapon)
  @@index(userId)
  @@index(abilityPoints)
}
