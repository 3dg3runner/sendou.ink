/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as Context from "./graphql/context"
import * as Prisma from ".prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  PlayerIdModeMonthYearCompoundUniqueInput: { // input type
    mode: NexusGenEnums['RankedMode']; // RankedMode!
    month: number; // Int!
    playerId: string; // String!
    year: number; // Int!
  }
  QueryXRankPlacementsOrderByInput: { // input type
    month?: NexusGenEnums['SortOrder'] | null; // SortOrder
    ranking?: NexusGenEnums['SortOrder'] | null; // SortOrder
    year?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  UpdateUserProfileInput: { // input type
    bio?: string | null; // String
    country?: string | null; // String
    customUrlPath?: string | null; // String
    sensMotion?: number | null; // Float
    sensStick?: number | null; // Float
    twitchName?: string | null; // String
    twitterName?: string | null; // String
    weaponPool: string[]; // [String!]!
    youtubeId?: string | null; // String
  }
  XRankPlacementWhereUniqueInput: { // input type
    id?: number | null; // Int
    playerId_mode_month_year?: NexusGenInputs['PlayerIdModeMonthYearCompoundUniqueInput'] | null; // PlayerIdModeMonthYearCompoundUniqueInput
  }
}

export interface NexusGenEnums {
  RankedMode: Prisma.RankedMode
  SortOrder: Prisma.SortOrder
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenRootTypes {
  Mutation: {};
  Player: Prisma.Player;
  Profile: Prisma.Profile;
  Query: {};
  User: Prisma.User;
  XRankPlacement: Prisma.XRankPlacement;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  PlayerIdModeMonthYearCompoundUniqueInput: NexusGenInputs['PlayerIdModeMonthYearCompoundUniqueInput'];
  QueryXRankPlacementsOrderByInput: NexusGenInputs['QueryXRankPlacementsOrderByInput'];
  UpdateUserProfileInput: NexusGenInputs['UpdateUserProfileInput'];
  XRankPlacementWhereUniqueInput: NexusGenInputs['XRankPlacementWhereUniqueInput'];
  RankedMode: NexusGenEnums['RankedMode'];
  SortOrder: NexusGenEnums['SortOrder'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    updateUserProfile: boolean; // Boolean!
  }
  Player: { // field return type
    names: string[]; // [String!]!
    placements: NexusGenRootTypes['XRankPlacement'][]; // [XRankPlacement!]!
    playerId: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
  }
  Profile: { // field return type
    bio: string | null; // String
    country: string | null; // String
    customUrlPath: string | null; // String
    sensMotion: number | null; // Float
    sensStick: number | null; // Float
    twitchName: string | null; // String
    twitterName: string | null; // String
    weaponPool: string[]; // [String!]!
    youtubeId: string | null; // String
  }
  Query: { // field return type
    getUserByIdentifier: NexusGenRootTypes['User'] | null; // User
    xRankPlacements: NexusGenRootTypes['XRankPlacement'][]; // [XRankPlacement!]!
  }
  User: { // field return type
    avatarUrl: string | null; // String
    discordId: string; // String!
    fullUsername: string; // String!
    id: number; // Int!
    profile: NexusGenRootTypes['Profile'] | null; // Profile
    profilePath: string; // String!
  }
  XRankPlacement: { // field return type
    id: number; // Int!
    mode: NexusGenEnums['RankedMode']; // RankedMode!
    month: number; // Int!
    player: NexusGenRootTypes['Player']; // Player!
    playerId: string; // String!
    playerName: string; // String!
    ranking: number; // Int!
    weapon: string; // String!
    xPower: number; // Float!
    year: number; // Int!
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    updateUserProfile: 'Boolean'
  }
  Player: { // field return type name
    names: 'String'
    placements: 'XRankPlacement'
    playerId: 'String'
    user: 'User'
  }
  Profile: { // field return type name
    bio: 'String'
    country: 'String'
    customUrlPath: 'String'
    sensMotion: 'Float'
    sensStick: 'Float'
    twitchName: 'String'
    twitterName: 'String'
    weaponPool: 'String'
    youtubeId: 'String'
  }
  Query: { // field return type name
    getUserByIdentifier: 'User'
    xRankPlacements: 'XRankPlacement'
  }
  User: { // field return type name
    avatarUrl: 'String'
    discordId: 'String'
    fullUsername: 'String'
    id: 'Int'
    profile: 'Profile'
    profilePath: 'String'
  }
  XRankPlacement: { // field return type name
    id: 'Int'
    mode: 'RankedMode'
    month: 'Int'
    player: 'Player'
    playerId: 'String'
    playerName: 'String'
    ranking: 'Int'
    weapon: 'String'
    xPower: 'Float'
    year: 'Int'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    updateUserProfile: { // args
      profile: NexusGenInputs['UpdateUserProfileInput']; // UpdateUserProfileInput!
    }
  }
  Player: {
    placements: { // args
      after?: NexusGenInputs['XRankPlacementWhereUniqueInput'] | null; // XRankPlacementWhereUniqueInput
      before?: NexusGenInputs['XRankPlacementWhereUniqueInput'] | null; // XRankPlacementWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Query: {
    getUserByIdentifier: { // args
      identifier: string; // String!
    }
    xRankPlacements: { // args
      after?: NexusGenInputs['XRankPlacementWhereUniqueInput'] | null; // XRankPlacementWhereUniqueInput
      before?: NexusGenInputs['XRankPlacementWhereUniqueInput'] | null; // XRankPlacementWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenInputs['QueryXRankPlacementsOrderByInput'][] | null; // [QueryXRankPlacementsOrderByInput!]
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Player" | "Profile" | "Query" | "User" | "XRankPlacement";

export type NexusGenInputNames = "PlayerIdModeMonthYearCompoundUniqueInput" | "QueryXRankPlacementsOrderByInput" | "UpdateUserProfileInput" | "XRankPlacementWhereUniqueInput";

export type NexusGenEnumNames = "RankedMode" | "SortOrder";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}